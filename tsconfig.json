{
  "compilerOptions": {
    // === MODERN TYPESCRIPT & NODE.JS TARGET ===
    "target": "ES2022",
    "lib": ["ES2022", "ES2022.Error"],
    "module": "NodeNext",
    "moduleResolution": "NodeNext", 
    "moduleDetection": "force",

    // === ESM MODULE OUTPUT OPTIMIZATION ===
    "outDir": "dist",
    "rootDir": "src",
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true,
    "inlineSources": false,
    "noEmit": false,
    "removeComments": false,
    "newLine": "lf",

    // === MAXIMUM TYPE SAFETY (ABSOLUTE STRICTEST SETTINGS) ===
    // Core strict flag (enables strictNullChecks, strictFunctionTypes, strictBindCallApply, strictPropertyInitialization, noImplicitAny, noImplicitThis)
    "strict": true,
    
    // Additional strict checks beyond --strict flag
    "noImplicitAny": true,                        // Already in strict, but explicit for clarity
    "strictNullChecks": true,                     // Already in strict, but explicit for clarity  
    "strictFunctionTypes": true,                  // Already in strict, but explicit for clarity
    "strictBindCallApply": true,                  // Already in strict, but explicit for clarity
    "strictPropertyInitialization": true,        // Already in strict, but explicit for clarity
    "noImplicitThis": true,                       // Already in strict, but explicit for clarity
    
    // Maximum strictness - catch ALL possible type issues
    "noUncheckedIndexedAccess": true,             // Force checking of indexed access
    "exactOptionalPropertyTypes": true,           // Distinguish undefined from missing properties
    "noImplicitReturns": true,                    // All code paths must return
    "noImplicitOverride": true,                   // Explicit override keyword required
    "noFallthroughCasesInSwitch": true,           // Prevent switch fallthrough bugs
    "noPropertyAccessFromIndexSignature": true,   // Force bracket notation for indexed access
    
    // Unused code detection (zero tolerance)
    "noUnusedLocals": true,                       // No unused local variables
    "noUnusedParameters": true,                   // No unused function parameters
    
    // Code quality enforcement  
    "allowUnreachableCode": false,                // No unreachable code allowed
    "allowUnusedLabels": false,                   // No unused labels allowed
    "noEmitOnError": true,                        // Don't emit JS if there are errors
    
    // Advanced strictness (TypeScript 5.x features)
    "strictBuiltinIteratorReturn": true,          // Strict checking of built-in iterator return types
    "noUncheckedSideEffectImports": true,         // Check side effect imports

    // === PERFORMANCE OPTIMIZATIONS ===
    "incremental": true,
    "tsBuildInfoFile": ".tsbuildinfo",
    "skipLibCheck": true,
    "skipDefaultLibCheck": true,
    "disableSourceOfProjectReferenceRedirect": true,
    "disableSolutionSearching": true,
    "disableReferencedProjectLoad": true,

    // === MODERN IMPORT/EXPORT HANDLING ===
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "resolveJsonModule": true,
    "allowImportingTsExtensions": false,
    "forceConsistentCasingInFileNames": true,
    "verbatimModuleSyntax": false,

    // === ADVANCED TYPE CHECKING ===
    "useDefineForClassFields": true,
    "experimentalDecorators": false,
    "emitDecoratorMetadata": false,

    // === CODE GENERATION ===
    "isolatedModules": true,
    "verbatimModuleSyntax": false,

    // === PATH MAPPING FOR CLEAN IMPORTS ===
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"],
      "@/lib/*": ["src/lib/*"],
      "@/utils/*": ["src/utils/*"],
      "@/types/*": ["src/types/*"],
      "@/emitters/*": ["src/emitters/*"]
    }
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.json"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "test",
    "tests",
    "**/*.test.ts",
    "**/*.spec.ts",
    "examples",
    "coverage",
    ".tsbuildinfo"
  ],
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node"
  }
}
