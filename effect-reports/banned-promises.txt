[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/validation/asyncapi-validator.ts[0m:[0m[32m242[0m:	async validate(document: unknown, _identifier?: string): [0m[1m[31mPromise<[0mValidationResult> {
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/validation/asyncapi-validator.ts[0m:[0m[32m278[0m:	async validateFile(filePath: string): [0m[1m[31mPromise<[0mValidationResult> {
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/validation/asyncapi-validator.ts[0m:[0m[32m316[0m:	async validateBatch(documents: Array<{ content: unknown, identifier?: string }>): [0m[1m[31mPromise<[0mValidationResult[]> {
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/validation/asyncapi-validator.ts[0m:[0m[32m418[0m:export async function validateAsyncAPIObject(document: unknown, options?: ValidationOptions): [0m[1m[31mPromise<[0mValidationResult> {
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/emitter/IAsyncAPIEmitter.ts[0m:[0m[32m23[0m:	programContext(program: Program): [0m[1m[31mPromise<[0mRecord<string, unknown>>
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/emitter/IAsyncAPIEmitter.ts[0m:[0m[32m38[0m:	writeOutput(sourceFiles: SourceFile<string>[]): [0m[1m[31mPromise<[0mvoid>
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/emitter/AsyncAPIEmitter.ts[0m:[0m[32m260[0m:	 * @returns [0m[1m[31mPromise<[0mRecord<string, unknown>> Context object containing the global scope for the generated source file
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/emitter/AsyncAPIEmitter.ts[0m:[0m[32m275[0m:	override async programContext(program: Program): [0m[1m[31mPromise<[0mRecord<string, unknown>> {
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/emitter/AsyncAPIEmitter.ts[0m:[0m[32m427[0m:	override async writeOutput(sourceFiles: SourceFile<string>[]): [0m[1m[31mPromise<[0mvoid> {
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/infrastructure/performance/PerformanceRegressionTester.ts[0m:[0m[32m86[0m:	runRegressionTest(testCaseName: string, testFunction: () => [0m[1m[31mPromise<[0mvoid>) {
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/utils/standardized-errors.ts[0m:[0m[32m224[0m:	tryAsync: <T>(fn: () => [0m[1m[31mPromise<[0mT>, context?: Record<string, unknown>) =>
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/utils/effect-helpers.ts[0m:[0m[32m189[0m:	executeAsync: <T>(operation: () => [0m[1m[31mPromise<[0mT>, errorMessage: string) =>
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/utils/effect-helpers.ts[0m:[0m[32m675[0m:		validationFn: () => [0m[1m[31mPromise<[0mT>,
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/domain/models/ErrorHandlingMigration.ts[0m:[0m[32m25[0m:		promiseFn: () => [0m[1m[31mPromise<[0mT>,
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/index.ts[0m:[0m[32m122[0m: * @returns [0m[1m[31mPromise<[0mvoid> - Completes when AsyncAPI documents are successfully generated and written to disk
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/index.ts[0m:[0m[32m177[0m:// TODO: CRITICAL - Add explicit return type annotation [0m[1m[31mPromise<[0mvoid> for clarity and better TypeScript errors
[0m[35m/Users/larsartmann/projects/typespec-asyncapi/src/index.ts[0m:[0m[32m183[0m:export async function $onEmit(context: EmitContext<AsyncAPIEmitterOptions>): [0m[1m[31mPromise<[0mvoid> {
